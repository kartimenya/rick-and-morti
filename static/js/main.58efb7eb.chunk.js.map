{"version":3,"sources":["components/Search.tsx","hoocs/useDebounce.ts","components/CharacterCart/index.tsx","hoocs/reduxHoocs.ts","pages/Bookmarks.tsx","store/slises/BookmarkSlise.ts","pages/CharacterPage.tsx","store/slises/FilterSlise.ts","components/Filters.tsx","store/slises/CharacterSlise.ts","components/CharacterCart/CharacterCartSpiner.tsx","pages/Home.tsx","App.tsx","store/store.ts","index.tsx"],"names":["Search","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","find","setFind","_useState5","_useState6","dropdown","setDropdown","debounced","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","history","useNavigate","searchCharacter","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","results","stop","apply","this","react_default","a","createElement","style","position","marginBottom","input","onChange","e","currentTarget","placeholder","list","maxHeight","overflowX","zIndex","width","background","paddingLeft","dataSource","renderItem","item","Item","key","id","onClick","Meta","alignItems","cursor","avatar","src","image","title","name","description","gender","CharacterCart","card","hoverable","cover","alt","Meta_default","useAppDispatch","useDispatch","useAppSelector","useSelector","Bookmarks","bookmarkCharacter","store","bookmark","page_header","onBack","space","justifyContent","size","map","react_router_dom","to","components_CharacterCart","bookmarkSlise","createSlice","initialState","reducers","setBookmarkItem","state","action","obj","payload","filter","push","actions","CharacterPage","dispatch","params","useParams","created","episode","status","url","location","character","setCharacter","setEpisode","CharacterPage_regeneratorRuntime","response","t0","console","log","es_image","Title_default","level","fontSize","fontWeight","color","className","x","y","viewBox","fill","points","d","filterSlise","page","setFilters","Filters","disputch","filters","es_select","defaultValue","objectSpread","Option","fetchCharacters","createAsyncThunk","CharacterSlise_regeneratorRuntime","sorting","abrupt","_x","CharacterSlise","loading","error","count","characters","extraReducers","builder","addCase","fulfilled","info","pending","rejected","CharacterCartSpiner","row","height","align","justify","col","spin","Home","_useAppSelector","direction","Filters_Filters","hanging","toConsumableArray","Array","_","i","CharacterCartSpiner_CharacterCartSpiner","pagination","current","defaultPageSize","total","showSizeChanger","App","layout_default","margin","maxWidth","padding","minHeight","components_Search","layout","react_router","path","element","pages_Home","pages_Bookmarks","pages_CharacterPage","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.58efb7eb.chunk.js","sourcesContent":["import { Avatar, Input, List } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDebounce } from '../hoocs/useDebounce';\r\nimport { ICharacter, ServerResponse } from '../models/models';\r\n\r\nconst Search: FC = () => {\r\n  const [value, setValue] = useState('');\r\n  const [find, setFind] = useState<ICharacter[]>([]);\r\n  const [dropdown, setDropdown] = useState<boolean>(false);\r\n  const debounced = useDebounce(value);\r\n  const history = useNavigate();\r\n\r\n  const itemClick = (id: number) => {\r\n    setDropdown(false);\r\n    setValue('');\r\n    history(`character/${id}`);\r\n  };\r\n\r\n  const searchCharacter = async () => {\r\n    const { data } = await axios.get<ServerResponse<ICharacter>>(\r\n      `https://rickandmortyapi.com/api/character/?name=${debounced}`,\r\n    );\r\n    setFind(data.results);\r\n    setDropdown(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (debounced.length > 1) {\r\n      searchCharacter();\r\n    } else {\r\n      setDropdown(false);\r\n    }\r\n  }, [debounced]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', marginBottom: '20px' }}>\r\n      <Input\r\n        value={value}\r\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.currentTarget.value)}\r\n        placeholder=\"Search...\"\r\n      />\r\n      {dropdown && (\r\n        <List\r\n          style={{\r\n            maxHeight: '500px',\r\n            overflowX: 'scroll',\r\n            position: 'absolute',\r\n            zIndex: 10,\r\n            width: '100%',\r\n            background: '#fff',\r\n            paddingLeft: '20px',\r\n          }}\r\n          dataSource={find}\r\n          renderItem={(item) => (\r\n            <List.Item key={item.id} onClick={() => itemClick(item.id)}>\r\n              <List.Item.Meta\r\n                style={{ alignItems: 'center', cursor: 'pointer' }}\r\n                avatar={<Avatar src={item.image} />}\r\n                title={item.name}\r\n                description={item.gender}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useDebounce<T>(value: T, delay = 400) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => clearTimeout(handler);\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import { Card } from 'antd';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport React, { FC } from 'react';\r\nimport { ICharacter } from '../../models/models';\r\n\r\nconst CharacterCart: FC<ICharacter> = ({ name, image }) => {\r\n  return (\r\n    <Card style={{ width: '300px' }} hoverable cover={<img alt=\"\" src={image} />}>\r\n      <Meta title={name} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CharacterCart;\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\nimport { AppDispatch, RootState } from '../store/store'\r\n\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { PageHeader, Space } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport CharacterCart from '../components/CharacterCart';\r\nimport { useAppDispatch, useAppSelector } from '../hoocs/reduxHoocs';\r\n\r\nconst Bookmarks = () => {\r\n  const history = useNavigate();\r\n  const { bookmarkCharacter } = useAppSelector((store) => store.bookmark);\r\n\r\n  useEffect(() => {\r\n    if (bookmarkCharacter.length) {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader onBack={() => history(`/`)} title=\"Bookmarks\" />\r\n      <Space style={{ justifyContent: 'space-between' }} size={[20, 20]} wrap>\r\n        {bookmarkCharacter.map((item) => (\r\n          <Link to={`/character/${item.id}`} key={item.id}>\r\n            <CharacterCart {...item} />\r\n          </Link>\r\n        ))}\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookmarks;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ICharacter } from './../../models/models';\r\n\r\ninterface BookmarkState {\r\n  bookmarkCharacter: ICharacter[];\r\n}\r\n\r\nconst initialState: BookmarkState = {\r\n  bookmarkCharacter: [],\r\n};\r\n\r\nconst bookmarkSlise = createSlice({\r\n  name: 'bookmark',\r\n  initialState,\r\n  reducers: {\r\n    setBookmarkItem(state, action: PayloadAction<ICharacter>) {\r\n      const findItem = state.bookmarkCharacter.find((obj) => obj.id === action.payload.id);\r\n\r\n      if (findItem) {\r\n        state.bookmarkCharacter = state.bookmarkCharacter.filter(\r\n          (item) => item.id != action.payload.id,\r\n        );\r\n      } else {\r\n        state.bookmarkCharacter.push(action.payload);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBookmarkItem } = bookmarkSlise.actions;\r\n\r\nexport default bookmarkSlise.reducer;\r\n","import { Card, Image, PageHeader, Space } from 'antd';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport axios from 'axios';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../hoocs/reduxHoocs';\r\nimport { ICharacter, IEpisode } from '../models/models';\r\nimport { setBookmarkItem } from '../store/slises/BookmarkSlise';\r\n\r\nconst CharacterPage: FC = () => {\r\n  const { bookmarkCharacter } = useAppSelector((state) => state.bookmark);\r\n  const dispatch = useAppDispatch();\r\n  const history = useNavigate();\r\n  const params = useParams<'id'>();\r\n  const [character, setCharacter] = useState<ICharacter>({\r\n    created: '',\r\n    episode: [],\r\n    gender: 'unknown',\r\n    id: 1,\r\n    image: '',\r\n    name: '',\r\n    status: 'unknown',\r\n    url: '',\r\n    location: { name: '' },\r\n  });\r\n  const [episode, setEpisode] = useState<IEpisode>({\r\n    name: '',\r\n    episode: '',\r\n  });\r\n\r\n  const searchCharacter = async () => {\r\n    try {\r\n      const { data } = await axios.get<ICharacter>(\r\n        `https://rickandmortyapi.com/api/character/${params.id}`,\r\n      );\r\n      setCharacter(data);\r\n\r\n      const response = await axios.get<IEpisode>(data.episode[0]);\r\n      setEpisode(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchCharacter();\r\n  }, []);\r\n\r\n  const addBookmark = () => {\r\n    dispatch(setBookmarkItem(character));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader onBack={() => history(`/`)} title=\"Character\" />\r\n      <Card style={{ width: '670px', position: 'relative' }}>\r\n        <Space size={30}>\r\n          <Image src={character.image} />\r\n          <div>\r\n            <Title style={{ marginBottom: '0' }} level={3}>\r\n              {character.name}\r\n            </Title>\r\n            <p style={{ fontSize: '16px', fontWeight: '500' }}>\r\n              {character.status} - {character.gender}\r\n            </p>\r\n            <div>\r\n              <span style={{ fontSize: '16px', fontWeight: '500', color: 'rgb(158, 158, 158)' }}>\r\n                Last known location:\r\n              </span>\r\n              <p style={{ fontSize: '16px', fontWeight: '500' }}>{character.location.name}</p>\r\n            </div>\r\n            <div>\r\n              <span style={{ fontSize: '16px', fontWeight: '500', color: 'rgb(158, 158, 158)' }}>\r\n                First seen in:\r\n              </span>\r\n              <p style={{ fontSize: '16px', fontWeight: '500' }}>\r\n                {episode.name} ({episode.episode})\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Space>\r\n        <svg onClick={addBookmark} className=\"bookmark-icon\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n          <polygon\r\n            fill={bookmarkCharacter.find((obj) => obj.id === character.id) ? '#000' : '#FFF'}\r\n            points=\"422.619,49.475 89.381,49.475 89.381,499.346 256,416.037 422.619,499.346 \"\r\n          />\r\n          <path\r\n            fill=\"#1D1D1B\"\r\n            d=\"M81.561,0v512L256,424.781L430.439,512V0H81.561z M414.798,15.641v26.014H97.202V15.641H414.798z\r\n\t M256,407.294L97.202,486.693V57.295h317.597v429.398L256,407.294z\"\r\n          />\r\n        </svg>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterPage;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface IFilters {\r\n  page: number;\r\n  status: string;\r\n  gender: string;\r\n}\r\n\r\nconst initialState: IFilters = {\r\n  page: 1,\r\n  status: '',\r\n  gender: '',\r\n};\r\n\r\nconst filterSlise = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n    setFilters(state, action: PayloadAction<IFilters>) {\r\n      state.page = action.payload.page;\r\n      state.status = action.payload.status;\r\n      state.gender = action.payload.gender;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilters } = filterSlise.actions;\r\n\r\nexport default filterSlise.reducer;\r\n","import { Select, Space } from 'antd';\r\nimport React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../hoocs/reduxHoocs';\r\nimport { setFilters } from '../store/slises/FilterSlise';\r\n\r\nexport const Filters = () => {\r\n  const disputch = useAppDispatch();\r\n  const filters = useAppSelector((state) => state.filter);\r\n\r\n  const genderChange = (gender: string) => {\r\n    disputch(setFilters({ ...filters, gender, page: 1 }));\r\n  };\r\n\r\n  const statusChange = (status: string) => {\r\n    disputch(setFilters({ ...filters, status, page: 1 }));\r\n  };\r\n\r\n  return (\r\n    <Space size={20}>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        placeholder=\"status\"\r\n        defaultValue={filters.status ? filters.status : null}\r\n        onChange={statusChange}>\r\n        <Select.Option value=\"\">All</Select.Option>\r\n        <Select.Option value=\"alive\">Alive</Select.Option>\r\n        <Select.Option value=\"dead\">Dead</Select.Option>\r\n        <Select.Option value=\"unknown\">Unknown</Select.Option>\r\n      </Select>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        placeholder=\"gender\"\r\n        defaultValue={filters.gender ? filters.gender : null}\r\n        onChange={genderChange}>\r\n        <Select.Option value=\"\">all</Select.Option>\r\n        <Select.Option value=\"female\">female</Select.Option>\r\n        <Select.Option value=\"male\">male</Select.Option>\r\n        <Select.Option value=\"genderless\">genderless</Select.Option>\r\n        <Select.Option value=\"unknown\">unknown</Select.Option>\r\n      </Select>\r\n    </Space>\r\n  );\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { ICharacter, ServerResponse } from '../../models/models';\r\n\r\nexport const fetchCharacters = createAsyncThunk(\r\n  'users/fetchCharacter',\r\n  async (sorting: { status: string; page: number; gender: string }) => {\r\n    const { status, page, gender } = sorting;\r\n    const { data } = await axios.get<ServerResponse<ICharacter>>(\r\n      `https://rickandmortyapi.com/api/character/?page=${page}&status=${status}&gender=${gender}`,\r\n    );\r\n    return data;\r\n  },\r\n);\r\n\r\ninterface CharacterState {\r\n  loading: 'pending' | 'succeeded' | 'failed';\r\n  error: string;\r\n  count: number;\r\n  characters: ICharacter[];\r\n}\r\n\r\nconst initialState: CharacterState = {\r\n  loading: 'pending',\r\n  error: '',\r\n  count: 0,\r\n  characters: [],\r\n};\r\n\r\nconst CharacterSlise = createSlice({\r\n  name: 'setCharacters',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      fetchCharacters.fulfilled,\r\n      (state, action: PayloadAction<ServerResponse<ICharacter>>) => {\r\n        state.loading = 'succeeded';\r\n        state.characters = action.payload.results;\r\n        state.count = action.payload.info.count;\r\n      },\r\n    );\r\n    builder.addCase(fetchCharacters.pending, (state) => {\r\n      state.loading = 'pending';\r\n    });\r\n    builder.addCase(fetchCharacters.rejected, (state) => {\r\n      state.loading = 'failed';\r\n      state.error = 'err';\r\n    });\r\n  },\r\n});\r\n\r\nexport default CharacterSlise.reducer;\r\n","import { Card, Col, Row, Spin } from 'antd';\r\nimport React from 'react';\r\n\r\nexport const CharacterCartSpiner = () => {\r\n  return (\r\n    <Card style={{ width: '300px' }}>\r\n      <Row style={{ height: '364px' }} align=\"middle\" justify=\"center\">\r\n        <Col>\r\n          <Spin size=\"large\" />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Col, Pagination, Row, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport CharacterCart from '../components/CharacterCart';\r\nimport { Filters } from '../components/Filters';\r\nimport { useAppDispatch, useAppSelector } from '../hoocs/reduxHoocs';\r\nimport { fetchCharacters } from '../store/slises/CharacterSlise';\r\nimport { setFilters } from '../store/slises/FilterSlise';\r\nimport { CharacterCartSpiner } from '../components/CharacterCart/CharacterCartSpiner';\r\n\r\nconst Home: FC = () => {\r\n  const disputch = useAppDispatch();\r\n  const { count, characters, loading } = useAppSelector((state) => state.characters);\r\n  const filters = useAppSelector((state) => state.filter);\r\n\r\n  useEffect(() => {\r\n    disputch(fetchCharacters(filters));\r\n  }, [filters]);\r\n\r\n  const pageChange = (page: number) => {\r\n    disputch(setFilters({ ...filters, page }));\r\n  };\r\n\r\n  return (\r\n    <Space size={20} direction={'vertical'}>\r\n      <div>\r\n        <Row align=\"middle\" justify=\"space-between\">\r\n          <Col>\r\n            <Filters />\r\n          </Col>\r\n          <Col>\r\n            <Link to={'bookmarks'}>\r\n              <svg width={25} hanging={25} x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                <polygon\r\n                  fill=\"#FFF\"\r\n                  points=\"422.619,49.475 89.381,49.475 89.381,499.346 256,416.037 422.619,499.346 \"\r\n                />\r\n                <path\r\n                  fill=\"#1D1D1B\"\r\n                  d=\"M81.561,0v512L256,424.781L430.439,512V0H81.561z M414.798,15.641v26.014H97.202V15.641H414.798z\r\n\t M256,407.294L97.202,486.693V57.295h317.597v429.398L256,407.294z\"\r\n                />\r\n              </svg>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Space size={20} direction={'vertical'}>\r\n        <Space style={{ justifyContent: 'space-between' }} size={[20, 20]} wrap>\r\n          {loading === 'pending'\r\n            ? [...new Array(4)].map((_, i) => <CharacterCartSpiner key={i} />)\r\n            : loading === 'succeeded'\r\n            ? characters.map((item) => (\r\n                <Link to={`/character/${item.id}`} key={item.id}>\r\n                  <CharacterCart {...item} />\r\n                </Link>\r\n              ))\r\n            : null}\r\n        </Space>\r\n        {count > 0 && (\r\n          <Pagination\r\n            current={filters.page}\r\n            defaultPageSize={20}\r\n            total={count}\r\n            showSizeChanger={false}\r\n            onChange={pageChange}\r\n          />\r\n        )}\r\n      </Space>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Layout, { Content } from 'antd/lib/layout/layout';\nimport React, { FC } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Search from './components/Search';\nimport Bookmarks from './pages/Bookmarks';\nimport CharacterPage from './pages/CharacterPage';\nimport Home from './pages/Home';\n\nconst App: FC = () => {\n  return (\n    <Layout\n      style={{ margin: '0 auto', maxWidth: '1400px', padding: '20px 50px', minHeight: '100vh' }}>\n      <Search />\n      <Content>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/bookmarks\" element={<Bookmarks />} />\n          <Route path=\"/character/:id\" element={<CharacterPage />} />\n        </Routes>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport characters from './slises/CharacterSlise';\r\nimport filter from './slises/FilterSlise';\r\nimport bookmark from './slises/BookmarkSlise';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    bookmark,\r\n    characters,\r\n    filter,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n);\n"],"sourceRoot":""}